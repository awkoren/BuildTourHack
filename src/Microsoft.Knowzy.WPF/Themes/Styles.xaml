<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:localization="clr-namespace:Microsoft.Knowzy.WPF.Localization">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Themes/Geometries.xaml"/>
        <ResourceDictionary Source="/Themes/Colors.xaml"/>
        <ResourceDictionary Source="/Themes/Converters.xaml"/>
        <ResourceDictionary Source="/Themes/FontSizes.xaml"/>
        <ResourceDictionary Source="/Themes/Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Padding" Value="20,0,0,0"/>
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Background" Value="{StaticResource SecondaryRedColorBrush}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryLightColorBrush}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Background" Value="{StaticResource SecondaryRedColorBrush}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryLightColorBrush}"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
 
    <Style x:Key="MenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="{StaticResource SecondaryRedColorBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource SegoeLight}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryLightColorBrush}"/>
        <Setter Property="Padding" Value="20,0,20,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryDarkColorBrush}"/>
        <Setter Property="Background" Value="{StaticResource PrimaryLightColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryMediumDarkColorBrush}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="-10,2,6,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="160"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="-2,0,10,0">
                            <Border x:Name="innerBorder" BorderBrush="{StaticResource PrimaryMediumDarkColorBrush}" BorderThickness="1,1,1,0" 
                                    Background="{StaticResource PrimaryMediumColorBrush}" Margin="-1" Opacity="0"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource PrimaryMediumDarkColorBrush}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource PrimaryMediumDarkColorBrush}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="-2,-2,-2,0"/>
                            <Setter Property="Margin" TargetName="mainBorder" Value="-2,0,10,-1"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  
    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Margin" Value="30"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource PrimaryMediumColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryMediumDarkColorBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GeometryStyle" TargetType="{x:Type Path}">
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Fill" Value="{StaticResource PrimaryDarkColorBrush}"/>
    </Style>

    <DataTemplate x:Key="HamburgerDataTemplate">
        <Grid Margin="-40,2,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Path Grid.Column="0" Data="{StaticResource HamburgerGeometry}" Style="{StaticResource GeometryStyle}"/>
            <TextBlock Grid.Column="1" Text="{x:Static localization:Resources.ListView_Tab}" VerticalAlignment="Center"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridDataTemplate">
        <Grid Margin="-40,2,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Path Grid.Column="0" Data="{StaticResource GridGeometry}" Style="{StaticResource GeometryStyle}"/>
            <TextBlock Grid.Column="1" Text="{x:Static localization:Resources.GridView_Tab}" VerticalAlignment="Center"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="ListViewStyle" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <ContentControl Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" >
                        <ContentControl.ContentTemplate>
                            <DataTemplate>
                                <Grid Height="40">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="Column0" />
                                        <ColumnDefinition x:Name="Column1" />
                                        <ColumnDefinition x:Name="Column2" />
                                        <ColumnDefinition x:Name="Column3" />
                                        <ColumnDefinition x:Name="Column4" />
                                    </Grid.ColumnDefinitions>
                                    <Border Background="White" BorderThickness="1,0,1,1" BorderBrush="{StaticResource PrimaryDarkColorBrush}">
                                        <TextBlock Text="{Binding ItemNumber}" Style="{DynamicResource TitleTextBlockStyle}" />
                                    </Border>
                                    <Border Grid.Column="1" Background="White" BorderThickness="0,0,1,1" BorderBrush="{StaticResource PrimaryDarkColorBrush}">
                                        <TextBlock Text="{Binding Engineer}" Style="{DynamicResource TitleTextBlockStyle}" />
                                    </Border>
                                    <Border Grid.Column="2" Background="White" BorderThickness="0,0,1,1" BorderBrush="{StaticResource PrimaryDarkColorBrush}">
                                        <TextBlock Text="{Binding NewProductName}"  Style="{DynamicResource TitleTextBlockStyle}"/>
                                    </Border>
                                    <Border Grid.Column="3" Background="White" BorderThickness="0,0,1,1" BorderBrush="{StaticResource PrimaryDarkColorBrush}">
                                        <TextBlock Text="{Binding RawMaterial}" Style="{DynamicResource TitleTextBlockStyle}"/>
                                    </Border>
                                    <Border Grid.Column="4" Background="White" BorderThickness="0,0,1,1" BorderBrush="{StaticResource PrimaryDarkColorBrush}">
                                        <TextBlock Text="{Binding Status}" Style="{DynamicResource TitleTextBlockStyle}"/>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </ContentControl.ContentTemplate>
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SortItemButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource PrimaryLightColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryDarkColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryDarkColorBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Height" Value="17"/>
        <Setter Property="Width" Value="19"/>
        <Setter Property="Margin" Value="15,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="true"/>
                        <Path Data="{StaticResource ArrowGeometry}" Stretch="Uniform" Height="5" HorizontalAlignment="Center" VerticalAlignment="Center"
                              Fill="{StaticResource PrimaryDarkColorBrush}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PrimaryMediumDarkColorBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PrimaryDarkColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PrimaryLightColorBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PrimaryDarkColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderFirstListItemsStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryDarkColorBrush}"/>
        <Setter Property="Margin" Value="2,0,0,0"/>
        <Setter Property="Background" Value="{StaticResource SecondaryYellowColorBrush}"/>
    </Style>

    <Style x:Key="HeaderListItemsStyle" TargetType="{x:Type Border}" BasedOn="{StaticResource HeaderFirstListItemsStyle}">
        <Setter Property="BorderThickness" Value="0,1,1,1"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style x:Key="DialogTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Margin" Value="4,4,30,4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TitleTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource SegoeRegular}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryDarkColorBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Margin" Value="11,0,0,0"/>
    </Style>

    <Style x:Key="DialogTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TitleTextBlockStyle}">
        <Setter Property="FontFamily" Value="{StaticResource SegoeBold}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    
</ResourceDictionary>
